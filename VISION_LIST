So far we have a very basic parsing happening. We get a command... and eval in the context of shell.

Need

Check to see if it's in a path format.. e.g.: bin/rake
	Do type detection.. if it's a ruby shell...
	Actually, we should be able to just.. no, that won't work in windows..
	if it's a ruby shell, do another instance of rush and load the ruby file
	other wise, just do a 'system command'

If it's not a path, a simple eval should suffice?

method missing also needs to:

	does the Shell class respond_to? the message?
	if not, ask if the path will (Would this be too expensive? I'd probably want to do my own hashing in this situation) 'system "which #{command}"' will probably do wonders for this
		If all else fails and I'm currently accepting parameters... stringify the shit and pass it along...

	method_missing will functional as a nice tokenizer, if you don't want to call ls, just quote it! 'ls' - fuck I'm a genious

	Interpretter should handle the eval
	Override shit like methods and delegate to Rush::Shell

	Need to decide how to handle parameters like stat..

	Can method missing use some kind of context to know, ok I'm currently accepting methods, or I'm currently accepting parameters...


